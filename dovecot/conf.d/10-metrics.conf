##
## Statistics and metrics
##

# Dovecot supports gathering statistics from events.
# Currently there are no statistics logged by default, and therefore they must
# be explicitly added using the metric configuration blocks.
#
# Unlike old stats, the new statistics do not require any plugins loaded.
#
# See https://doc.dovecot.org/configuration_manual/stats/ for more details.

##
## Example metrics
##

metric auth_success {
  filter = event=auth_request_finished AND success=yes
  group_by = user
}
#
metric auth_failures {
  filter = event=auth_request_finished AND NOT success=yes
  group_by = user
}
#
metric imap_command {
  filter = event=imap_command_finished
  group_by = user cmd_name tagged_reply_state
}
#
metric smtp_command {
  filter = event=smtp_server_command_finished
  group_by = user cmd_name status_code
}
#
metric mail_delivery {
  filter = event=mail_delivery_finished
  group_by = user
}

metric sieve_action {
  filter = event=sieve_action_finished
  group_by = user action_name
}

metric sieve_success {
  filter = event=sieve_runtime_script_finished AND error = ""
  group_by = user script_name
}

metric sieve_error {
  filter = event=sieve_runtime_script_finished AND NOT error = ""
  group_by = user script_name error
}

##
## Prometheus
##

# To allow access to statistics with Prometheus, enable http listener
# on stats process. Stats will be available on /metrics path.
#
# See https://doc.dovecot.org/configuration_manual/stats/openmetrics/ for more
# details.

service stats {
  inet_listener http {
    port = 9900
  }
}

##
## Event exporting
##

# You can also export individual events.
#
# See https://doc.dovecot.org/configuration_manual/event_export/ for more
# details.

#event_exporter log {
#  format = json
#  format_args = time-rfc3339
#  transport = log
#}
#
#metric imap_commands {
#  exporter = log
#  filter = event=imap_command_finished
#}
